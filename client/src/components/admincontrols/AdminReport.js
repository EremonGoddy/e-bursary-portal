import React, { useState, useEffect } from 'react';
import patient from '../../assets/patient.png';
import { Link, useNavigate } from 'react-router-dom';
import axios from 'axios';
import jsPDF from 'jspdf';
import 'jspdf-autotable';
import 'bootstrap/dist/css/bootstrap.min.css';
import 'bootstrap-icons/font/bootstrap-icons.css';
import './Admincontrols.css';

const AdminReport = () => {
  const [sidebarActive, setSidebarActive] = useState(false);
  const [adminDetails, setAdminDetails] = useState({});
  const [bursaryInfo, setBursaryInfo] = useState({});
  const [applicationInfo, setApplicationInfo] = useState({});
  const navigate = useNavigate();

  const toggleSidebar = () => {
    setSidebarActive(!sidebarActive);
  };

  useEffect(() => {
    const token = sessionStorage.getItem('authToken');
    if (!token) {
      navigate('/signin');
      return;
    }

    axios
      .get('http://localhost:5000/api/committee-count')
      .then((response) => {
        setBursaryInfo({
          totalFunds: response.data.amount,
          allocated: response.data.allocated,
          remaining: response.data.remaining,
        });
      })
      .catch((error) => console.error('Error fetching bursary info:', error));

    axios
      .get('http://localhost:5000/api/quick-statistics')
      .then((response) => {
        setApplicationInfo({
          total: response.data.total,
          approved: response.data.approved,
          rejected: response.data.rejected,
        });
      })
      .catch((error) => console.error('Error fetching application statistics:', error));

    axios.get('http://localhost:5000/api/admin-details')
      .then(response => {
        setAdminDetails({
          name: response.data.name,
          email: response.data.email,
        });
      })
      .catch(error => console.error('Error fetching admin details:', error));
  }, [navigate]);

  const downloadReport = () => {
    const doc = new jsPDF();

    doc.setFont('times', 'normal');
    doc.setFontSize(25);
    doc.text('Bursary Report', 105, 20, null, null, 'center');
    doc.setFontSize(20);
    doc.text('Generated by Bursary Management System', 105, 30, null, null, 'center');
    doc.line(10, 35, 200, 35);

    const personalInfo = [
      ['Full Name', adminDetails.name || 'N/A'],
      ['Email', adminDetails.email || 'N/A'],
    ];

    doc.autoTable({
      startY: 50,
      head: [['Personal Information', 'Details']],
      body: personalInfo,
      theme: 'striped',
      headStyles: { fillColor: [41, 128, 185], textColor: [255, 255, 255], fontSize: 14 },
      bodyStyles: { fontSize: 12 },
      styles: { font: 'times' },
    });

    const bursaryData = [
      ['Total Funds Available', bursaryInfo.totalFunds || 'N/A'],
      ['Allocated Funds', bursaryInfo.allocated || 'N/A'],
      ['Remaining Funds', bursaryInfo.remaining || 'N/A'],
    ];

    doc.autoTable({
      startY: doc.lastAutoTable.finalY + 10,
      head: [['Bursary Information', 'Details']],
      body: bursaryData,
      theme: 'grid',
      headStyles: { fillColor: [39, 174, 96], textColor: [255, 255, 255], fontSize: 14 },
      bodyStyles: { fontSize: 12 },
      styles: { font: 'times' },
    });

    const applicationData = [
      ['Total Applications', applicationInfo.total || 'N/A'],
      ['Approved Applications', applicationInfo.approved || 'N/A'],
      ['Rejected Applications', applicationInfo.rejected || 'N/A'],
    ];

    doc.autoTable({
      startY: doc.lastAutoTable.finalY + 10,
      head: [['Application Information', 'Details']],
      body: applicationData,
      theme: 'grid',
      headStyles: { fillColor: [192, 57, 43], textColor: [255, 255, 255], fontSize: 14 },
      bodyStyles: { fontSize: 12 },
      styles: { font: 'times' },
    });

    const declarationInfo = [
      ['Declaration', 'I hereby confirm the above details are accurate and complete.'],
      ['Committee Member Name', '________________________'],
      ['Signature', '________________________'],
      ['Date', '________________________'],
    ];

    doc.autoTable({
      startY: doc.lastAutoTable.finalY + 20,
      head: [['Declaration', '']],
      body: declarationInfo,
      theme: 'grid',
      headStyles: { fillColor: [192, 57, 43], textColor: [255, 255, 255], fontSize: 14 },
      bodyStyles: { fontSize: 12, halign: 'left' },
      styles: { font: 'times' },
    });

    doc.setFontSize(10);
    doc.text(`Generated on: ${new Date().toLocaleString()}`, 10, 290);
    doc.text('Bursary Management System', 105, 290, null, null, 'center');

    doc.save('Bursary_Report.pdf');
  };

  return (
    <div className="container-fluid p-0">
      {/* Top Bar */}
      <div className="topbaradmin d-flex justify-content-between p-2 shadow-sm">
        <div className="logo">
          <h2>EBursary</h2>
        </div>
        <div className="search">
          <input type="text" id="search" placeholder="search here" />
          <label htmlFor="search">
            <i className="bi bi-search"></i>
          </label>
        </div>
        <h1 className='welcoming'>Welcome: {adminDetails.name}</h1>
        <div className="user">
          <img src={patient} alt="User" className="rounded-circle" width="40" height="40" />
        </div>
      </div>

      {/* Sidebar */}
      <div className="row flex-nowrap">
        <div className={`sidebaradmin col-auto col-md-3 col-xl-2 px-sm-2 px-0 shadow-sm ${sidebarActive ? 'active' : ''}`}>
          <div className="d-flex flex-column align-items-center align-items-sm-start px-3 pt-2 text-white min-vh-100">
            <i className="bi bi-list text-white fs-3" id="btn" onClick={toggleSidebar}></i>
            <ul className="nav flex-column mb-sm-auto mb-0 align-items-center align-items-sm-start" id="menu">
              <li className="nav-item">
                <Link to='/admindashboard' className="nav-link align-middle px-0">
                  <i className="bi bi-house-door-fill"></i> <span className="ms-1 d-none d-sm-inline">Dashboard</span>
                </Link>
              </li>
              <li>
                <Link to="/usermanagement" className="nav-link px-0 align-middle">
                  <i className="bi bi-person-fill-gear"></i> <span className="ms-1 d-none d-sm-inline">User Management</span>
                </Link>
              </li>
              <li>
                <Link to="/bursaryfund" className="nav-link px-0 align-middle">
                  <i className="bi bi-bank"></i> <span className="ms-1 d-none d-sm-inline">Bursary Management</span>
                </Link>
              </li>
              <li>
                <Link to="/monitoring" className="nav-link px-0 align-middle">
                  <i className="bi bi-file-earmark-person"></i> <span className="ms-1 d-none d-sm-inline">Application Monitoring</span>
                </Link>
              </li>
              <li>
                <Link to="/adminreport" className="nav-link px-0 align-middle">
                  <i className="bi bi-bar-chart-fill"></i> <span className="ms-1 d-none d-sm-inline">Analysis</span>
                </Link>
              </li>
              <li>
                <Link to='/auditlogs' className="nav-link px-0 align-middle">
                  <i className="bi bi-list-check"></i> <span className="ms-1 d-none d-sm-inline">Audit logs</span>
                </Link>
              </li>
              <li>
                <Link to='/adminsetting' className="nav-link px-0 align-middle">
                  <i className="bi bi-gear-fill"></i> <span className="ms-1 d-none d-sm-inline">Settings</span>
                </Link>
              </li>
            </ul>
            <hr />
            <div className="dropdown pb-4">
              <Link to='/' className="d-flex align-items-center text-white text-decoration-none">
                <i className="bi bi-box-arrow-right"></i> <span className="d-none d-sm-inline mx-1">Logout</span>
              </Link>
            </div>
          </div>
        </div>

        <div className="col py-3">
          <h1>Bursary Report</h1>
          <div className="card p-4 shadow-sm mb-4">
            <table className="table table-bordered">
              <thead>
                <tr>
                  <th>Reference Number</th>
                  <th>Application Title</th>
                  <th>Download Application</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td></td>
                  <td>Committee Report</td>
                  <td>
                    <i className="bi bi-download" onClick={downloadReport}></i>
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  );
}

export default AdminReport;