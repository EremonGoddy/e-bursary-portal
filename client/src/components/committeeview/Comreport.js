import React, { useState, useEffect } from 'react';
import axios from 'axios';
import jsPDF from 'jspdf';
import 'jspdf-autotable';
import 'bootstrap/dist/css/bootstrap.min.css';
import 'bootstrap-icons/font/bootstrap-icons.css';
import { Link, useNavigate } from 'react-router-dom';
import './Profile.css';

const Comreport = () => {
  const [sidebarActive, setSidebarActive] = useState(false);
  const [committeeDetails, setCommitteeDetails] = useState({});
  const [studentDetails, setStudentDetails] = useState({});
  const [bursaryInfo, setBursaryInfo] = useState({});
  const [applicationInfo, setApplicationInfo] = useState({});
  const navigate = useNavigate();

  // Function to toggle sidebar active state
  const toggleSidebar = () => {
    setSidebarActive(!sidebarActive);
  };

  useEffect(() => {
    const token = sessionStorage.getItem('authToken');
    if (!token) {
      navigate('/signin'); // Redirect if not authenticated
    } else {
      axios
        .get('http://localhost:5000/api/comreport', {
          headers: { Authorization: token },
        })
        .then((response) => {
          setStudentDetails(response.data);
        })
        .catch((error) => console.error('Error fetching student data:', error));
    }

    axios
      .get('http://localhost:5000/api/committee-count')
      .then((response) => {
        setBursaryInfo({
          totalFunds: response.data.amount,
          allocated: response.data.allocated,
          remaining: response.data.remaining,
        });
      })
      .catch((error) => console.error('Error fetching bursary info:', error));

    axios
      .get('http://localhost:5000/api/quick-statistics')
      .then((response) => {
        setApplicationInfo({
          total: response.data.total,
          approved: response.data.approved,
          rejected: response.data.rejected,
        });
      })
      .catch((error) => console.error('Error fetching application statistics:', error));
  }, [navigate]);

  const downloadReport = () => {
    const doc = new jsPDF();

    doc.setFont('times', 'normal');
    doc.setFontSize(25);
    doc.text('Bursary Report', 105, 20, null, null, 'center');
    doc.setFontSize(20);
    doc.text('Generated by Bursary Management System', 105, 30, null, null, 'center');
    doc.line(10, 35, 200, 35);

    // Personal Information Table
    const personalInfo = [
      ['Reference Number', studentDetails.reference_number || 'N/A'],
      ['Full Name', studentDetails.fullname || 'N/A'],
      ['Email', studentDetails.email || 'N/A'],
      ['Phone No', studentDetails.phone_no || 'N/A'],
      ['National ID', studentDetails.national_id || 'N/A'],
      ['Sub County', studentDetails.subcounty || 'N/A'],
      ['Ward', studentDetails.ward || 'N/A'],
      ['Position', studentDetails.position || 'N/A'],
    ];

    doc.autoTable({
      startY: 50,
      head: [['Personal Information', 'Details']],
      body: personalInfo,
      theme: 'striped',
      headStyles: { fillColor: [41, 128, 185], textColor: [255, 255, 255], fontSize: 14 },
      bodyStyles: { fontSize: 12 },
      styles: { font: 'times' },
    });

    // Bursary Information Table
    const bursaryData = [
      ['Total Funds Available', bursaryInfo.totalFunds || 'N/A'],
      ['Allocated Funds', bursaryInfo.allocated || 'N/A'],
      ['Remaining Funds', bursaryInfo.remaining || 'N/A'],
    ];

    doc.autoTable({
      startY: doc.lastAutoTable.finalY + 10,
      head: [['Bursary Information', 'Details']],
      body: bursaryData,
      theme: 'grid',
      headStyles: { fillColor: [39, 174, 96], textColor: [255, 255, 255], fontSize: 14 },
      bodyStyles: { fontSize: 12 },
      styles: { font: 'times' },
    });

    // Application Information Table
    const applicationData = [
      ['Total Applications', applicationInfo.total || 'N/A'],
      ['Approved Applications', applicationInfo.approved || 'N/A'],
      ['Rejected Applications', applicationInfo.rejected || 'N/A'],
    ];

    doc.autoTable({
      startY: doc.lastAutoTable.finalY + 10,
      head: [['Application Information', 'Details']],
      body: applicationData,
      theme: 'grid',
      headStyles: { fillColor: [192, 57, 43], textColor: [255, 255, 255], fontSize: 14 },
      bodyStyles: { fontSize: 12 },
      styles: { font: 'times' },
    });

    // Declaration Table
    const declarationInfo = [
      ['Declaration', 'I hereby confirm the above details are accurate and complete.'],
      ['Committee Member Name', '________________________'],
      ['Signature', '________________________'],
      ['Date', '________________________'],
    ];

    // Render Declaration Table
    doc.autoTable({
      startY: doc.lastAutoTable.finalY + 20,
      head: [['Declaration', '']],
      body: declarationInfo,
      theme: 'grid',
      headStyles: { fillColor: [192, 57, 43], textColor: [255, 255, 255], fontSize: 14 },
      bodyStyles: { fontSize: 12, halign: 'left' },
      styles: { font: 'times' }, // Set font family for the table
    });

    // Footer Section
    doc.setFontSize(10);
    doc.text(`Generated on: ${new Date().toLocaleString()}`, 10, 290);
    doc.text('Bursary Management System', 105, 290, null, null, 'center');

    // Save the PDF
    doc.save('Bursary_Report.pdf');
  };

  // Fetch profile data when component loads
  useEffect(() => {
    const token = sessionStorage.getItem('authToken');
    if (!token) {
      navigate('/signin');
    } else {
      axios
        .get('http://localhost:5000/api/profile-committee', {
          headers: { Authorization: `Bearer ${token}` },
        })
        .then((response) => {
          setCommitteeDetails(response.data);
        })
        .catch((error) => {
          console.error('Error fetching profile data:', error);
        });
    }
  }, [navigate]);

  return (
    <div className="container-fluid">
      {/* Top Bar */}
      <div className="row bg-light p-2 align-items-center">
        <div className="col-md-3">
          <h2>EBursary</h2>
        </div>
        <div className="col-md-4">
          <input type="text" className="form-control" placeholder="Search here" />
        </div>
        <div className="col-md-3 text-center">
          <h5>Welcome: {committeeDetails.fullname}</h5>
        </div>
        <div className="col-md-1 text-end">
        <img src='/images/patient.png' alt="User" className="rounded-circle" width="40" height="40" />
        </div>
        <div className="col-md-1 text-end">
          <i className="bi bi-bell-fill"></i>
        </div>
      </div>

      <div className="row">
        {/* Sidebar */}
        <div className={`sidebar ${sidebarActive ? 'active' : ''}`}>
          <div className="d-flex flex-column">
            <i className="bi bi-list text-white" id="btn" onClick={toggleSidebar}></i>
            <ul>
              <li>
                <Link to="/committeedashboard" className="d-flex align-items-center text-decoration-none text-white">
                  <i className="bi bi-house-door-fill"></i>
                  <span className="links-name">Dashboard</span>
                </Link>
                <span className="tooltip">Dashboard</span>
              </li>
              <li>
                <Link to="/profile" className="d-flex align-items-center text-decoration-none text-white">
                  <i className="bi bi-person-square"></i>
                  <span className="links-name">Profile</span>
                </Link>
                <span className="tooltip">Profile</span>
              </li>
              <li>
                <Link to="/userdetails" className="d-flex align-items-center text-decoration-none text-white">
                  <i className="bi bi-file-earmark-text-fill"></i>
                  <span className="links-name">Student Information</span>
                </Link>
                <span className="tooltip">Student Information</span>
              </li>
              <li>
                <Link to="/comreport" className="d-flex align-items-center text-decoration-none text-white">
                  <i className="bi bi-bar-chart-fill"></i>
                  <span className="links-name">Analysis</span>
                </Link>
                <span className="tooltip">Analysis</span>
              </li>
              <li>
                <Link to="/settings" className="d-flex align-items-center text-decoration-none text-white">
                  <i className="bi bi-gear-fill"></i>
                  <span className="links-name">Settings</span>
                </Link>
                <span className="tooltip">Settings</span>
              </li>
              <br />
              <div className="Navigation">
                <li>
                  <Link to="/" className="d-flex align-items-center text-decoration-none text-white">
                    <i className="bi bi-box-arrow-right"></i>
                    <span className="links-name">Logout</span>
                  </Link>
                  <span className="tooltip">Logout</span>
                </li>
              </div>
            </ul>
          </div>
        </div>

        {/* Main Content Area */}
        <div className="col-12 col-md-10 p-4">
          <div className="report-container">
            <h1>Bursary Report</h1>
            <table className="table table-bordered">
              <thead className="table-primary">
                <tr>
                  <th>Reference Number</th>
                  <th>Application Title</th>
                  <th>Download Application</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td>{studentDetails.reference_number || 'N/A'}</td>
                  <td>Committee Report</td>
                  <td>
                    <i className="bi bi-download" onClick={downloadReport}></i>
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Comreport;